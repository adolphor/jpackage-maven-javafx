<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example</groupId>
  <artifactId>hello-jpackage</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>hello-jpackage</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <javafx.version>17.0.2</javafx.version>
    <junit.version>5.7.1</junit.version>

    <client.version>1.0.0</client.version>

    <runtime-image>runtime-image</runtime-image>
    <main-jar-name>${project.name}-${project.version}.jar</main-jar-name>
    <main-class>com.example.javafx.HelloApplication</main-class>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafx.version}</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>17</source>
          <target>17</target>
          <release>17</release>
          <compilerVersion>17</compilerVersion>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- jpackage 需要指定input参数，且main-jar要在input目录中，所以将启动jar和依赖jar全部放在libs目录下 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
          <outputDirectory>${project.build.directory}/libs</outputDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/libs</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeScope>compile</includeScope>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>0.0.8</version>
        <configuration>
          <mainClass>${main-class}</mainClass>
        </configuration>
        <executions>
          <execution>
            <id>default-cli</id>
            <goals>
              <goal>jlink</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <noHeaderFiles>true</noHeaderFiles>
              <noManPages>true</noManPages>
              <stripDebug>true</stripDebug>
              <compress>2</compress>
              <jlinkImageName>${runtime-image}</jlinkImageName>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>3.0.0-M1</version>
        <configuration>
          <!-- javafx 项目不需要install到maven仓库，所以跳过install -->
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.github.akman</groupId>
          <artifactId>jpackage-maven-plugin</artifactId>
          <version>0.1.3</version>
          <!-- 配置所有平台的公共参数以及jpackage这个execution -->
          <configuration>
            <toolhome>${env.JAVA_HOME}</toolhome>
            <name>${project.name}</name>
            <appversion>${client.version}</appversion>
            <runtimeimage>${project.build.directory}/${runtime-image}</runtimeimage>
            <input>${project.build.directory}/libs</input>
            <dest>${project.build.directory}/jpackage</dest>
            <temp>${project.build.directory}/temp</temp>
            <mainjar>${main-jar-name}</mainjar>
            <mainclass>${main-class}</mainclass>
            <arguments>--opt</arguments>
            <javaoptions>-Dfile.encoding=UTF-8 -Xms256m -Xmx512m</javaoptions>
            <copyright>Copyright@adolphor</copyright>
            <description>jpackage test project</description>
            <vendor>What is Vendor?</vendor>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>jpackage</goal>
              </goals>
              <phase>install</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <!-- 根据平台类型，配置额外的jpackage参数 -->
  <profiles>
    <profile>
      <id>build-mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.akman</groupId>
            <artifactId>jpackage-maven-plugin</artifactId>
            <configuration>
              <type>PLATFORM</type>
              <icon>jpackage/logo/macosx/duke.icns</icon>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>build-linux</id>
      <activation>
        <os>
          <family>linux</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.akman</groupId>
            <artifactId>jpackage-maven-plugin</artifactId>
            <configuration>
              <type>PLATFORM</type>
              <icon>jpackage/logo/linux/duke.png</icon>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>build-windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.akman</groupId>
            <artifactId>jpackage-maven-plugin</artifactId>
            <configuration>
              <type>PLATFORM</type>
              <icon>jpackage/logo/linux/duke.png</icon>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>